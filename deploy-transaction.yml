trigger:
  branches:
    include:
    - 'main'         

## Global
variables:

- group: dojo.global

stages:
- stage: build
  displayName: build
  jobs:
  - job: build
    pool:
      vmImage: windows-latest
    steps:       

    - task: UseDotNet@2
      inputs:
        version: '6.0.x'
        packageType: runtime
        
    - task: NuGetToolInstaller@1
          
    - task: DotNetCoreCLI@2
      displayName: Build Transaction Service
      inputs:
        command: build
        projects: 'src/TransactionService/Dojo.Bakery.Transaction.API/Dojo.Bakery.Transaction.API.csproj'
        arguments: '--configuration $(buildConfiguration)'
    
    - task: DotNetCoreCLI@2
      displayName: 'Install .NET tools from local manifest'
      inputs:
        command: custom
        custom: tool
        arguments: 'restore'
        
    - script: dotnet tool install --tool-path tools dotnet-reportgenerator-globaltool --version 4.6.1
      displayName: 'Install ReportGenerator tool'
      continueOnError: true

    ##- script: ./tools/reportgenerator "-reports:$(Agent.TempDirectory)/**/*.cobertura.xml" "-targetdir:$(Build.SourcesDirectory)/coverlet/reports" "-reporttypes:Cobertura;HtmlInline"
    ##  displayName: 'Config ReportGenerator tool'
    ##  continueOnError: true

    - task: DotNetCoreCLI@2
      displayName: 'Run unit tests - $(buildConfiguration)'
      inputs:
        command: 'test'
        arguments: '--no-build --configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'
        publishTestResults: true
        projects: '**/*.Tests.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Create code coverage report'
      inputs:
        command: custom
        custom: tool
        arguments: 'run reportgenerator -reports:$(Build.SourcesDirectory)/**/coverage.cobertura.xml -targetdir:$(Build.SourcesDirectory)/CodeCoverage -reporttypes:HtmlInline_AzurePipelines'

    - task: PublishCodeCoverageResults@1
      displayName: 'Publish code coverage report'
      inputs:
        codeCoverageTool: 'cobertura'
        summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
        
       
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        zipAfterPublish: True
    
    - publish: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Publish Artifact'
      artifact: artifact
    
## Dev environment deploy 
- stage: Dev
  dependsOn: build   
  condition: and(succeeded('build'), startsWith(variables['build.sourceBranch'], 'refs/heads/main'))  
  displayName: Deploy to Dev
  jobs:
  - template: templates/deployment-transaction-service.yml
    parameters:
      environmentVariableGroup: dojo.dev
      environment: Development
      azureSubscription: 'dojo-snc(1)(bc6fc020-fffa-4ace-9100-0065f1bce58d)'
      appServiceName:  'dv-east-transaction-service-app-win'
      vmImage: 'windows-latest'
